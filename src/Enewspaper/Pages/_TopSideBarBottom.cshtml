@using ModelData.Services;
@inject ICategoryServices CategoryServices
@inject IPostServices PostServices
@inject IAdvertService AdvertServices
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}


@{
    List<ModelData.Models.Advert> itemAdert = await AdvertServices.GetAdvertsAsync();
    List<ModelData.Models.Post> itemPost = await PostServices.GetPublishedPosts(showInHero: true);

}

<div class="single-sidebar col-lg-12 col-md-6 col-12">

    <div class="sidebar-banner">
        @{
            ModelData.Models.Advert belowsideAdvert = itemAdert.FirstOrDefault(x => x.Position == ModelData.Models.AdvertPosition.SidebarBottom);
        }
        @if (belowsideAdvert != null)
        {
            <a href="@belowsideAdvert.Link" target="_blank">
                <img src="@belowsideAdvert.ImageUrl" alt="@belowsideAdvert.Title" class="img-fluid">
            </a>
        }

    </div>
</div>
<div class="single-sidebar col-lg-12 col-md-6 col-12">
    <!-- Sidebar Block Wrapper -->
    <div class="sidebar-block-wrapper">
        <!-- Sidebar Block Head Start -->
        <div class="head">
            <!-- Title -->
            <h4 class="title">
                Tags
            </h4>
        </div>
        <!-- Sidebar Block Head End -->
        <!-- Sidebar Block Body Start -->
        <div class="body">
            @{
                // Get recent posts (adjust service method as needed)
                var postTags = (await PostServices.GetRecentPosts())
                    .OrderByDescending(p => p.PublishedAt ?? p.Date)
                    .Take(10)
                    .ToList();

                // Flatten tags and remove duplicates
                var tags = postTags
                    .Where(p => p.Tags != null)
                    .SelectMany(p => p.Tags)
                    .Distinct()
                    .OrderBy(t => t)
                    .ToList();
            }

            <ul class="sidebar-category">
                @foreach (var tag in tags)
                {
                    <li>
                        <a asp-page="/Blog/Tag" asp-route-tag="@tag">@tag</a>
                    </li>
                }
            </ul>
        </div>
        <!-- Sidebar Block Body End -->
    </div>
</div>




<div class="single-sidebar col-lg-12 col-md-6 col-12">
    <div class="sidebar-subscribe">
        <h4>
            Subscribe To
            <br>Our
            <span>
                Update
            </span> News
        </h4>

        <!-- Newsletter Form -->
        <div class="subscribe-form validate">
            <div id="mc_embed_signup_scroll">
                <label for="mce-EMAIL" class="d-none">
                    Subscribe to our mailing list
                </label>
                <input type="email" id="newsletterEmail" placeholder="Enter your mail" class="form-control" />
                <input type="hidden" id="__RequestVerificationToken" value="@token" />
                <button type="submit" name="subscribe" id="subscribeBtn" class="button">
                    submit
                </button>
            </div>
        </div>
        <small id="subscribeMessage" class="text-black"></small>
    </div>
</div>





