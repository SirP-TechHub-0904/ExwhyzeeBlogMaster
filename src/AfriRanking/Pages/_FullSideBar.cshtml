@using ModelData.Services;
@inject ICategoryServices CategoryServices
@inject IPostServices PostServices
@inject IAdvertService AdvertServices


@{
    List<ModelData.Models.Advert> itemAdert = await AdvertServices.GetAdvertsAsync();
    List<ModelData.Models.Post> itemPost = await PostServices.GetPublishedPosts(showInHero: true);

}
 
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

 
<div class="ne-sidebar sidebar-break-md col-lg-4 col-md-12">

    <div class="sidebar-box">
        <div class="ne-banner-layout1 text-center">
            @{
                ModelData.Models.Advert sideadvert = itemAdert.FirstOrDefault(x => x.Position == ModelData.Models.AdvertPosition.SidebarTop);
            }
            @if (sideadvert != null)
            {
                <a href="@sideadvert.Link" target="_blank">
                    <img src="@sideadvert.ImageUrl" alt="@sideadvert.Title" class="img-fluid">
                </a>
            }

        </div>
    </div>
    <div class="sidebar-box">
        <div class="topic-border color-scampi mb-5 recent-01-news">
            <div class="topic-box-lg color-scampi">Recent News</div>
        </div>
        <div class="row">
            @{
                // Get the 4 most recent posts
                var recentPosts = (await PostServices.GetRecentPosts()) // Or GetPosts() depending on your service
                                    .OrderByDescending(p => p.PublishedAt ?? p.Date)
                                    .Take(8)
                                    .ToList();
            }

            @foreach (var post in recentPosts)
            {
                var imageUrl = post.PostImages?.FirstOrDefault(pi => pi.IsDefault)?.ImageUrl ?? "~/assets/default.jpg";

                <div class="col-lg-6 col-md-6 col-sm-6 col-6 mb-3">
                    <div class="recent-01-news border rounded p-2 h-100">
                        <a asp-page="/PostPage" asp-route-slug="@post.Slug" class="d-block mb-2" style="aspect-ratio: 1/1;">
                            <div style="
    width: 100%;
    height: 100%;
    background-image: url('@Url.Content(imageUrl)');
    background-size: cover;
    background-position: center;
    border-radius: 5px;">
                            </div>
                        </a>
                        <h3 class="title-medium-dark size-md mb-0" style="font-size: 0.9rem; line-height: 1.2;">
                            <a asp-page="/PostPage" asp-route-slug="@post.Slug">@post.Title</a>
                        </h3>
                    </div>
                </div>


            }
        </div>
    </div>

    <div class="sidebar-box">
        <div class="ne-banner-layout1 text-center">
            @{
                ModelData.Models.Advert belowsideAdvert = itemAdert.FirstOrDefault(x => x.Position == ModelData.Models.AdvertPosition.SidebarBottom);
            }
            @if (belowsideAdvert != null)
            {
                <a href="@belowsideAdvert.Link" target="_blank">
                    <img src="@belowsideAdvert.ImageUrl" alt="@belowsideAdvert.Title" class="img-fluid">
                </a>
            }

        </div>
    </div>
    <div class="sidebar-box">
        <div class="topic-border color-cod-gray mb-30">
            <div class="topic-box-lg color-cod-gray">Newsletter</div>
        </div>
        <div class="newsletter-area bg-primary">
            <h2 class="title-medium-light size-xl pl-30 pr-30">
                Subscribe to our mailing list to get the new updates!
            </h2>
            <p>Subscribe our newsletter to stay updated</p>

            <div class="input-group stylish-input-group">
                <input type="email" id="newsletterEmail" placeholder="Enter your mail" class="form-control" />
                <input type="hidden" id="__RequestVerificationToken" value="@token" />
                <span class="input-group-addon">
                    <button type="button" id="subscribeBtn">
                        <i class="fa fa-angle-right" aria-hidden="true"></i>
                    </button>
                </span>
            </div>

            <small id="subscribeMessage" class="text-white"></small>
        </div>
    </div>




    <div class="sidebar-box">
        <div class="topic-border color-cod-gray mb-25">
            <div class="topic-box-lg color-cod-gray">Tags</div>
        </div>
        @{
            // Get recent posts (adjust service method as needed)
            var postTags = (await PostServices.GetRecentPosts())
                .OrderByDescending(p => p.PublishedAt ?? p.Date)
                .Take(10)
                .ToList();

            // Flatten tags and remove duplicates
            var tags = postTags
                .Where(p => p.Tags != null)
                .SelectMany(p => p.Tags)
                .Distinct()
                .OrderBy(t => t)
                .ToList();
        }

        <ul class="sidebar-tags">
            @foreach (var tag in tags)
            {
                <li>
                    <a asp-page="/Blog/Tag" asp-route-tag="@tag">@tag</a>
                </li>
            }
        </ul>
    </div>
</div>



