@page "/post/{slug}"
@model TalkDTalk.Pages.PostPageModel

@using ModelData.Services;
@inject ISettingsService SettingsService
@{
    ModelData.Models.Setting siteSettings = await SettingsService.GetSettingsAsync();

}


@{
    var post = Model.Post;
    var footerAd = Model.FooterAdvert;
}

<div class="main--breadcrumb">
    <div class="container">
        <ul class="breadcrumb">
            <li>
                <a href="/" class="btn-link">
                    <i class="fa fm fa-home">
                    </i>Home
                </a>
            </li>
            <li>
                <a asp-page="/CategoryPage" asp-route-slug="@post?.Category?.Slug" class="btn-link">
                    @post?.Category?.Title
                </a>
            </li>
            <li class="active">
                <span>
                    @post?.Title
                </span>
            </li>
        </ul>
    </div>
</div>

<div class="main-content--section pbottom--30">
    <div class="container">
        <div class="row" style="transform: none;">
            <div class="main--content col-md-8" data-sticky-content="true" style="position: relative; overflow: visible; box-sizing: border-box; min-height: 1px;">
                <div class="sticky-content-inner" style="padding-top: 0px; padding-bottom: 1px; position: static; transform: none;">
                    <div class="post--item post--single post--title-largest pd--30-0">
                        <div class="post--img">
                            <a href="#" class="thumb">
                                <img src="@post.PostImages?.FirstOrDefault()?.ImageUrl" alt="@post.Title" data-rjs="2">
                            </a>

                        </div>
                        <div class="post--cats">
                            <ul class="nav">
                                @if (Model.Post.Tags.Count() > 0)
                                {
                                    <li>
                                        <span>
                                            <i class="fa fa-tags">
                                            </i>
                                        </span>
                                    </li>
                                }
                                @foreach (var tag in Model.Post.Tags)
                                {
                                    <li>
                                        <a href="#">@tag</a>
                                    </li>
                                }

                            </ul>
                        </div>
                        <div class="post--info">
                            <ul class="nav meta">
                                <li>
                                    <a href="#">
                                        @post.PostBy
                                    </a>
                                </li>
                                <li>
                                    <a href="#">
                                        @(post.PublishedAt?.ToString("MMM dd, yyyy"))
                                    </a>
                                </li>
                                <li>
                                    <span>
                                        <i class="fa fm fa-eye">
                                        </i>@post.ViewCount
                                    </span>
                                </li>
                                <li>
                                    <a href="#">
                                        <i class="fa fm fa-comments-o">
                                        </i>@if (Model.Comments != null && Model.Comments.Any())
                                        {
                                            @Model.Comments?.Count
                                        }
                                    </a>
                                </li>
                            </ul>

                        </div>
                        <div class="post--content" id="postContent">
                            @Html.Raw(Model.ModifiedContentHtml)

                        </div>

                    </div>

                    <div class="post--tags">
                        <ul class="nav">
                            <li>
                                <span>
                                    <i class="fa fa-tags">
                                    </i>
                                </span>
                            </li>
                            @foreach (var tag in Model.Post.Tags)
                            {
                                <li>
                                    <a href="#">@tag</a>
                                </li>
                            }


                        </ul>
                    </div>
                    <div class="post--social pbottom--30">
                        <span class="title">
                            <i class="fa fa-share-alt">
                            </i>
                        </span>
                        <div class="social--widget style--4">
                            <ul class="nav">
                                <li>
                                    <a href="https://www.facebook.com/sharer/sharer.php?u=@Model.PostUrl" target="_blank" class="">
                                        <i class="fa fa-facebook"></i>
                                    </a>
                                </li>
                                <li>
                                    <a href="https://twitter.com/intent/tweet?url=@Model.PostUrl&text=@Model.Post?.Title" target="_blank" class="">
                                        <i class="fa fa-twitter"></i>
                                    </a>
                                </li>
                                <li>
                                    <a href="https://www.linkedin.com/shareArticle?mini=true&url=@Model.PostUrl&title=@Model.Post?.Title" target="_blank" class="">
                                        <i class="fa fa-linkedin"></i>
                                    </a>
                                </li>
                                <li>
                                    <a href="https://pinterest.com/pin/create/button/?url=@Model.PostUrl" target="_blank" class="">
                                        <i class="fa fa-pinterest"></i>
                                    </a>
                                </li>
                                <li>
                                    <a href="https://wa.me/?text=@Uri.EscapeDataString($"{Model.Post?.Title} - {Model.PostUrl}")" target="_blank" class="">
                                        <i class="fab fa-whatsapp"></i>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>

                    <div class="post--nav">
                        <ul class="nav row">
                            @if (Model.PreviousPost != null)
                            {
                                string display = "";

                                if (Model.PreviousPost != null && Model.PreviousPost.PublishedAt != null)
                                {
                                    var date = Model.PreviousPost.PublishedAt.Value;
                                    var now = DateTime.Now;
                                    var timePart = date.ToString("hh:mm tt");
                                    var daysDiff = (date.Date - now.Date).Days;

                                    if (date.Date == now.Date)
                                    {
                                        display = $"Today {timePart}";
                                    }
                                    else if (daysDiff == -1)
                                    {
                                        display = $"Yesterday {timePart}";
                                    }
                                    else if (daysDiff == 1)
                                    {
                                        display = $"Tomorrow {timePart}";
                                    }
                                    else if (date.Date > now.Date.AddDays(-7) && date.Date < now.Date)
                                    {
                                        display = $"Last week {date:dddd} {timePart}";
                                    }
                                    else if (date.Month == now.AddMonths(-1).Month && date.Year == now.Year)
                                    {
                                        display = $"Last month {date:dd MMM yyyy} {timePart}";
                                    }
                                    else if (date.Year == now.Year - 1)
                                    {
                                        display = $"Last year {date:dd MMM yyyy} {timePart}";
                                    }
                                    else
                                    {
                                        display = date.ToString("dd MMM yyyy hh:mm tt");
                                    }
                                }
                                else
                                {
                                    display = "—";
                                }




                                <li class="col-xs-6 ptop--30 pbottom--30">
                                    <div class="post--item">
                                        <div class="post--img">
                                            <a href="@Url.Page("/PostPage", new { slug = Model.PreviousPost.Slug })" class="thumb">
                                                <img src="@(Model.PreviousPost?.PostImages?.FirstOrDefault(x => x.IsDefault)?.ImageUrl ?? "")" alt="@Model.PreviousPost.Title" data-rjs="2">
                                            </a>
                                            <div class="post--info">
                                                <ul class="nav meta">
                                                    <li>
                                                        <a href="#">
                                                            @Model.PreviousPost.Category.Title
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a href="@Url.Page("/PostPage", new { slug = Model.PreviousPost.Slug })">
                                                            @display
                                                        </a>
                                                    </li>
                                                </ul>
                                                <div class="title">
                                                    <h3 class="h4">
                                                        <a href="@Url.Page("/PostPage", new { slug = Model.PreviousPost.Slug })" class="btn-link">
                                                            @Model.PreviousPost.Title
                                                        </a>
                                                    </h3>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </li>

                            }
                            @if (Model.NextPost != null)
                            {

                                string display = "";

                                if (Model.PreviousPost != null && Model.PreviousPost.PublishedAt != null)
                                {
                                    var date = Model.PreviousPost.PublishedAt.Value;
                                    var now = DateTime.Now;
                                    var timePart = date.ToString("hh:mm tt");
                                    var daysDiff = (date.Date - now.Date).Days;

                                    if (date.Date == now.Date)
                                    {
                                        display = $"Today {timePart}";
                                    }
                                    else if (daysDiff == -1)
                                    {
                                        display = $"Yesterday {timePart}";
                                    }
                                    else if (daysDiff == 1)
                                    {
                                        display = $"Tomorrow {timePart}";
                                    }
                                    else if (date.Date > now.Date.AddDays(-7) && date.Date < now.Date)
                                    {
                                        display = $"Last week {date:dddd} {timePart}";
                                    }
                                    else if (date.Month == now.AddMonths(-1).Month && date.Year == now.Year)
                                    {
                                        display = $"Last month {date:dd MMM yyyy} {timePart}";
                                    }
                                    else if (date.Year == now.Year - 1)
                                    {
                                        display = $"Last year {date:dd MMM yyyy} {timePart}";
                                    }
                                    else
                                    {
                                        display = date.ToString("dd MMM yyyy hh:mm tt");
                                    }
                                }
                                else
                                {
                                    display = "—";
                                }

                                <li class="col-xs-6 ptop--30 pbottom--30">
                                    <div class="post--item">
                                        <div class="post--img">
                                            <a href="@Url.Page("/PostPage", new { slug = Model.NextPost.Slug })" class="thumb">
                                                <img src="@(Model.NextPost?.PostImages?.FirstOrDefault(x => x.IsDefault)?.ImageUrl ?? "")" alt="@Model.NextPost.Title" data-rjs="2">
                                            </a>
                                            <div class="post--info">
                                                <ul class="nav meta">
                                                    <li>
                                                        <a href="@Url.Page("/PostPage", new { slug = Model.NextPost.Slug })">
                                                            @Model.NextPost.Category.Title
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a href="@Url.Page("/PostPage", new { slug = Model.NextPost.Slug })">
                                                            @display
                                                        </a>
                                                    </li>
                                                </ul>
                                                <div class="title">
                                                    <h3 class="h4">
                                                        <a href="@Url.Page("/PostPage", new { slug = Model.NextPost.Slug })" class="btn-link">
                                                            @Model.NextPost.Title
                                                        </a>
                                                    </h3>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </li>

                            }
                        </ul>
                    </div>





                    @if (Model.Comments != null && Model.Comments.Any())
                    {
                        <div class="comment--list pd--30-0">
                            <div class="post--items-title">
                                <h2 class="h4">
                                    @((Model.Comments?.Count ?? 0)) Comments
                                </h2>
                                <i class="icon fa fa-comments-o">
                                </i>
                            </div>
                            <ul class="comment--items nav" id="commentList">
                                @foreach (var comment in Model.Comments.Take(5))
                                {
                                    <li>
                                        <div class="comment--item clearfix">

                                            <div class="comment--info">
                                                <div class="comment--header clearfix">
                                                    <p class="name">
                                                        @comment.AuthorName
                                                    </p>
                                                    <p class="date">
                                                        @comment.CreatedAt.ToString("MMMM dd, yyyy 'at' hh:mm tt")
                                                    </p>
                                                    <a href="#" class="reply">
                                                        <i class="fa fa-mail-reply">
                                                        </i>
                                                    </a>
                                                </div>
                                                <div class="comment--content">
                                                    <p>
                                                        @comment.Content
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </li>
                                }

                            </ul>
                            @if (Model.Comments.Count > 5)
                            {
                                <div class="text-center mt-3">
                                    <button id="loadMoreBtn" class="btn btn-outline-primary" data-skip="5" data-postid="@Model.Post.Id">
                                        Load More Comments
                                    </button>
                                </div>
                            }
                        </div>

                    }
                    <div class="comment--form pd--30-0">
                        <div class="post--items-title">
                            <h2 class="h4">
                                Leave A Comment
                            </h2>
                            <i class="icon fa fa-pencil-square-o">
                            </i>
                        </div>
                        <div class="comment-respond">
                            <form method="post">
                                <p>
                                    Don’t worry! Your email address will not be published. Required fields are marked (*).
                                </p>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <label>
                                            <span>Comment *</span>
                                            <textarea asp-for="NewComment.Content" class="form-control" required aria-required="true"></textarea>
                                        </label>
                                    </div>

                                    <div class="col-sm-6">
                                        @if (!User.Identity.IsAuthenticated)
                                        {
                                            <label>
                                                <span>Name *</span>
                                                <input asp-for="NewComment.AuthorName" type="text" class="form-control" required aria-required="true" />
                                            </label>

                                            <label>
                                                <span>Email Address *</span>
                                                <input asp-for="NewComment.AuthorEmail" type="email" class="form-control" required aria-required="true" />
                                            </label>
                                        }

                                    </div>

                                    <div class="col-md-12">
                                        <button type="submit" class="btn btn-primary">
                                            Post a Comment
                                        </button>
                                    </div>
                                </div>
                            </form>

                        </div>
                    </div>

                </div>
            </div>
            <div class="main--sidebar col-md-4 ptop--30 pbottom--30" data-sticky-content="true" style="position: relative; overflow: visible; box-sizing: border-box; min-height: 1px;">
                <div class="sticky-content-inner" style="padding-top: 0px; padding-bottom: 1px; position: static; transform: none; left: 882.5px; top: 0px;">

                    <partial name="_TopSideBar" />

                    <partial name="_TopSideBarBottom" />



                </div>
            </div>
        </div>
    </div>
</div>







@section Scripts {

    <script>
        $(document).ready(function () {
            $('#loadMoreBtn').on('click', function () {
                let btn = $(this);
                let skip = parseInt(btn.data('skip'));
                let postId = btn.data('postid');

                console.log("[LoadComments] Button clicked");
                console.log("[LoadComments] postId:", postId);
                console.log("[LoadComments] skip:", skip);

                $.get(`${window.location.pathname}?handler=LoadComments&postId=${postId}&skip=${skip}&take=5`, function (data) {
                    console.log("[LoadComments] Response received:", data);

                    if (data.length === 0) {
                        console.log("[LoadComments] No more comments.");
                        btn.remove(); // No more comments
                    } else {
                        console.log(`[LoadComments] Appending ${data.length} comments...`);
                        data.forEach(c => {
                            $('#commentList').append(`
                                        <li>
                                            <div class="comment--item clearfix">
                                                <div class="comment--info">
                                                    <div class="comment--header clearfix">
                                                        <p class="name">${c.authorName}</p>
                                                        <p class="date">${c.createdAt}</p>
                                                        <a href="#" class="reply">
                                                            <i class="fa fa-mail-reply"></i>
                                                        </a>
                                                    </div>
                                                    <div class="comment--content">
                                                        <p>${c.content}</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </li>
                                    `);
                        });

                        btn.data('skip', skip + data.length);
                    }
                }).fail(function (xhr, status, error) {
                    console.error("[LoadComments] AJAX failed:", status, error);
                });
            });
        });
    </script>


    <script>
    $(document).ready(function () {
        var alreadyViewed = sessionStorage.getItem("viewedPost_@Model.Post.Id");
        if (alreadyViewed) return;

        var postId = @Model.Post.Id;

        var observer = new IntersectionObserver(function (entries, obs) {
            entries.forEach(function (entry) {
                if (entry.isIntersecting) {
                    $.get(window.location.pathname + "?handler=ViewCount&postId=" + postId, function (res) {
                        if (res.success) {
                            sessionStorage.setItem("viewedPost_" + postId, "true");
                        }
                    });
                    obs.disconnect();
                }
            });
        }, { threshold: 0.4 });

        var target = document.getElementById("postContent");
        if (target) observer.observe(target);
    });
    </script>





}












