@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-12">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Honeypot -->
            <input type="text" asp-for="Input.BotCheck" style="display:none;" autocomplete="off" />

            <div class="form-floating mb-3">
                <input asp-for="Input.FullName" class="form-control" placeholder="Full Name" />
                <label asp-for="Input.FullName">Full Name</label>
                <span asp-validation-for="Input.FullName" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.PhoneNumber" class="form-control" placeholder="Phone" />
                <label asp-for="Input.PhoneNumber">Phone</label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.City" class="form-control" placeholder="City" />
                <label asp-for="Input.City">City</label>
                <span asp-validation-for="Input.City" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.Country" class="form-control" placeholder="Country" />
                <label asp-for="Input.Country">Country</label>
                <span asp-validation-for="Input.Country" class="text-danger"></span>
            </div>


            <!-- Email -->
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>

            <!-- Password + toggle -->
            <div class="form-floating mb-3 position-relative">
                <input asp-for="Input.Password" id="password" class="form-control" autocomplete="new-password" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
                <span class="position-absolute top-50 end-0 translate-middle-y me-3" style="cursor:pointer;" onclick="togglePassword('password')">
                    👁
                </span>
            </div>

            <div class="form-floating mb-3 position-relative">
                <input asp-for="Input.ConfirmPassword" id="confirmPassword" class="form-control" autocomplete="new-password" placeholder="Confirm Password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                <span class="position-absolute top-50 end-0 translate-middle-y me-3" style="cursor:pointer;" onclick="togglePassword('confirmPassword')">
                    👁
                </span>
            </div>

            <button type="submit" class="w-100 btn btn-lg btn-dark text-white">Register</button>
        </form>
    </div>

</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Toggle password visibility
        function togglePassword(id) {
            const input = document.getElementById(id);
            input.type = input.type === 'password' ? 'text' : 'password';
        }

        // Load country list dynamically
        document.addEventListener("DOMContentLoaded", function () {
            const countrySelect = document.querySelector('[name="Input.Country"]');
            if (!countrySelect) return;

            fetch("https://restcountries.com/v3.1/all")
                .then(res => res.json())
                .then(data => {
                    data.sort((a, b) => a.name.common.localeCompare(b.name.common));
                    data.forEach(c => {
                        const opt = document.createElement("option");
                        opt.value = c.name.common;
                        opt.textContent = c.name.common;
                        countrySelect.appendChild(opt);
                    });
                })
                .catch(err => {
                    console.error("Failed to load country list", err);
                });
        });
    </script>
}

